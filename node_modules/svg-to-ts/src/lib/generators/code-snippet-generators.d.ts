import { SvgDefinition } from '../converters/shared.converter';
import { ConstantsConversionOptions } from '../options/conversion-options/constant-conversion-options';
import { FilesConversionOptions } from '../options/conversion-options/files-conversion-options';
import { ObjectConversionOptions } from '../options/conversion-options/object-conversion-options';
export declare enum Delimiter {
    CAMEL = "CAMEL",
    KEBAB = "KEBAB",
    SNAKE = "SNAKE",
    UPPER = "UPPER",
    NONE = "NONE"
}
export declare const generateInterfaceDefinition: (conversionOptions: FilesConversionOptions | ConstantsConversionOptions) => string;
export declare const generateObjectInterface: (exportAsDefaultObject: boolean, conversionOptions: ObjectConversionOptions) => string;
export declare const generateTypeDefinition: (conversionOptions: FilesConversionOptions | ConstantsConversionOptions, svgDefinitions: SvgDefinition[]) => string;
export declare const generateEnumDefinition: (conversionOptions: FilesConversionOptions | ConstantsConversionOptions, svgDefinitions: SvgDefinition[]) => string;
export declare const generateSvgConstant: (variableName: string, filenameWithoutEnding: string, data: string) => string;
export declare function generateTSXConstant(variableName: string, svg: string): string;
export declare const generateExportStatement: (fileName: string, generatedIconsFolderName?: string) => string;
export declare const generateNamedImportStatement: (name: string, module: string) => string;
export declare const generateTypeName: (filenameWithoutEnding: any, delimiter: Delimiter, namePrefix?: string) => string;
export declare const generateVariableName: (prefix: string, filenameWithoutEnding: any) => string;
export declare const generateTypeHelper: (interfaceName: string) => string;
export declare const generateTypeHelperWithImport: (interfaceName: string, iconsFolderName: string, modelFileName: string) => string;
